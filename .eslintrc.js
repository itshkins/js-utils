module.exports = {
  env: {
    es2022: true,
    node: true,
    commonjs: true,
  },
  // extends: [`prettier`],
  // plugins: [`prettier`],
  parser: `@babel/eslint-parser`,
  parserOptions: {
    ecmaVersion: 2022,
    sourceType: `module`,
  },
  overrides: [{
    files: [`*.ts`],
    excludedFiles: `*.test.ts`,
    parser: `@typescript-eslint/parser`,
    parserOptions: {
      sourceType: `module`,
      tsconfigRootDir: __dirname,
      project: `tsconfig.json`,
    },
    plugins: [
      `@typescript-eslint`
    ],
    extends: [
      `eslint:recommended`,
      `plugin:@typescript-eslint/eslint-recommended`,
      `plugin:@typescript-eslint/recommended`
    ],
  }],
  rules: {
    'no-cond-assign': `error`,
    'no-irregular-whitespace': `error`,
    'no-unexpected-multiline': `error`,
    'valid-jsdoc': [`error`, {
      requireParamDescription: false,
      requireReturnDescription: false,
      requireReturn: false,
      prefer: {returns: `return`}
    }],
    'no-constant-condition': `error`,
    'no-control-regex': `error`,
    'no-debugger': `error`,
    'no-dupe-keys': `error`,
    'no-dupe-args': `error`,
    'no-duplicate-case': `error`,
    'no-empty': `error`,
    'no-empty-character-class': `error`,
    'no-ex-assign': `error`,
    'no-extra-boolean-cast': `error`,
    'no-extra-semi': `error`,
    'no-func-assign': `error`,
    'no-inner-declarations': [`error`, `functions`],
    'no-invalid-regexp': `error`,
    'no-unsafe-negation': `error`,
    'no-obj-calls': `error`,
    'no-regex-spaces': `error`,
    'no-sparse-arrays': `error`,
    'no-unreachable': `error`,
    'use-isnan': `error`,
    'valid-typeof': `error`,

    'guard-for-in': `error`,
    'max-nested-callbacks': [`error`, {max: 3}],
    'no-caller': `error`,
    'no-extend-native': `error`,
    'no-extra-bind': `error`,
    'no-invalid-this': `error`,
    'no-multi-spaces': `error`,
    'no-multi-str': `error`,
    'no-new-wrappers': `error`,
    'no-throw-literal': `error`,
    'no-with': `error`,
    'consistent-return': `error`,
    'curly': [`error`, `all`],
    'eqeqeq': `error`,
    'no-alert': `error`,
    'no-eval': `error`,
    'no-fallthrough': `error`,
    'no-floating-decimal': `error`,
    'no-implied-eval': `error`,
    'no-iterator': `error`,
    'no-labels': `error`,
    'no-lone-blocks': `error`,
    'no-global-assign': `error`,
    'no-new': `error`,
    'no-new-func': `error`,
    'no-octal': `error`,
    'no-octal-escape': `error`,
    'no-proto': `error`,
    'no-redeclare': `error`,
    'no-return-assign': `warn`,
    'no-script-url': `error`,
    'no-sequences': `error`,
    'no-unused-expressions': `error`,
    'radix': `error`,

    'strict': [`error`, `global`],

    'no-unused-vars': [`error`, {args: `after-used`, argsIgnorePattern: `^_`}],
    'no-delete-var': `error`,
    'no-label-var': `error`,
    '@typescript-eslint/no-shadow': `error`,
    'no-shadow': `warn`,
    'no-shadow-restricted-names': `error`,
    'no-undef': `error`,
    'no-undef-init': `error`,
    'no-undefined': `off`,

    'indent': [`error`, 2, {
      SwitchCase: 1,
      VariableDeclarator: 1,
      MemberExpression: `off`,
      FunctionDeclaration: {parameters: 2},
      FunctionExpression: {parameters: 2},
      CallExpression: {arguments: 1}
    }],
    'block-spacing': [`error`, `always`],
    'array-bracket-spacing': [`error`, `never`],
    'brace-style': [`error`, `stroustrup`],
    'camelcase': `error`,
    'comma-dangle': [`error`, `only-multiline`],
    'comma-spacing': `error`,
    'comma-style': `error`,
    'computed-property-spacing': `error`,
    'eol-last': `error`,
    'func-call-spacing': `error`,
    'key-spacing': `error`,
    'keyword-spacing': `error`,
    'linebreak-style': `off`,
    'new-cap': `error`,
    'no-array-constructor': `error`,
    'no-mixed-spaces-and-tabs': `error`,
    'no-multiple-empty-lines': [`error`, {max: 2}],
    'no-new-object': `error`,
    'no-trailing-spaces': `error`,
    'object-curly-spacing': `error`,
    'one-var': [`error`, {
      var: `never`,
      let: `never`,
      const: `never`
    }],
    'padded-blocks': [`off`, `never`],
    'quote-props': [`error`, `consistent`],
    'semi-spacing': `error`,
    'semi': `error`,
    'space-in-parens': [`error`, `never`],
    'space-before-blocks': `error`,
    'space-before-function-paren': [`error`, {named: `never`, anonymous: `always`}],
    'spaced-comment': [`error`, `always`],
    'unicode-bom': `warn`,
    'new-parens': `error`,
    'no-nested-ternary': `error`,
    'space-infix-ops': `error`,
    'space-unary-ops': [`error`, {words: true, nonwords: false}],
    'yoda': [`warn`, `never`],

    // es6
    'arrow-parens': [`error`, `always`],
    'constructor-super': `error`,
    'generator-star-spacing': [`error`, `after`],
    'no-new-symbol': `error`,
    'no-this-before-super': `error`,
    'no-var': `error`,
    'prefer-rest-params': `error`,
    'prefer-spread': `error`,
    'rest-spread-spacing': `error`,
    'yield-star-spacing': [`error`, `after`],

    'object-shorthand': [`error`, `always`, {'avoidQuotes': true}],
    'quotes': [`error`, `backtick`],

    // node
    'no-console': `off`,
    'no-process-exit': `off`,
  },
};
